# Configuration file

client {
    # Clears caches on world unload a bit faster than usual. Prevents temporary memory leaks. More effective in Anarchy. [default: true]
    B:clearCachesOnWorldUnload=true

    # Clears the baked models generated in the first pass *before* entering the second pass, instead of *after*. While this doesn't reduce memory usage in-game, it does reduce it noticeably during loading. [default: true]
    B:clearDuplicateModelRegistry=true

    # Deduplicates IModels too. Takes a few seconds more, but shaves off another bit of RAM. [default: true]
    B:deduplicateModelBakers=true

    # Deduplicates baked models. The original feature. [default: true]
    B:deduplicateModels=true

    # The maximum amount of levels of recursion for the deduplication process. Smaller values will deduplicate less data, but make the process run faster. [default: 9, range: 1-2147483647]
    I:deduplicateModelsMaxRecursion=9
    B:disableTextureAnimations=false
    B:initOptions=true
    B:jeiCreativeSearch=true

    # Remove unnecessary data from a pointlessly cached ModelLoader instance. [default: true]
    B:modelLoaderCleanup=true
    B:wipeModelCache=true
}


coremod {
    B:blacklistLibraryTransformers=true
    B:dynamicItemModels=true
    B:fasterAirItemLookup=true
    B:fasterEntityLookup=true
    B:fasterHopper=true
    B:fasterPropertyComparisons=true
    B:fixWorldEntityCleanup=true

    # Disables all coremod functionality. [default: false]
    B:forceDisable=true
    I:mobSpawnerCheckSpeed=10
    B:optimizedBlockPos=true
    B:patchChunkSerialization=true
    B:smallPropertyStorage=true
}


debug {
    # Should FoamFix count and list baked models during deduplication, per mod? [default: false]
    B:countListBakedModels=false
}


experimental {
    B:fasterEntityDataManager=false

    # Unpacks all baked quads. Increases RAM usage, but might speed some things up. [default: false]
    B:unpackBakedQuads=false
}


general {
    # Enable deduplication of redundant objects in memory. [default: true]
    B:deduplicate=true
}


ghostbuster {
    # Checks if worlds do not unload after a specified amount of time, and notifies the user if that is the case. [default: true]
    B:checkNonUnloadedWorldClients=true

    # The amount of time FoamFix should wait for a world to be deemed non-unloaded. [default: 60, range: 10-3600]
    I:checkNonUnloadedWorldTimeout=60

    # Wrap ChunkProviderServers to be able to provide the /ghostbuster command for debugging ghost chunkloads. [default: false]
    B:enableDebuggingWrapper=false

    # For FoamFix debugging/development purposes only. [default: false]
    B:nonUnloadedWorldsForceGCOnCheck=false
    B:patchBeds=true

    # Should the /ghostbuster debugger show neighbor updates? [default: false]
    B:wrapperShowsNeighborUpdates=false
}


launchwrapper {
    # Remove Launchwrapper package manifest map (which is not used anyway). [default: true]
    B:removePackageManifestMap=true

    # Weaken LaunchWrapper's byte[] resource cache to make it cleanuppable by the GC. Safe. [default: true]
    B:weakenResourceCache=true
}


textures {
    B:enable=true
    I:fasterAnimation=1
    I:maxAnimationFramesForCache=256
    I:maxAnimationMipLevel=-1
}


tweaks {
    # Prevent redstone from causing light updates by removing its light level. [default: false]
    B:disableRedstoneLight=false
    B:immediateLightingUpdates=false
}


